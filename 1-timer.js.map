{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nlet userSelectedDate = Date.now();\nlet deltaTime = { days: '00', hours: '00', minutes: '00', seconds: '00' };\n\nconst refs = {\n  input: document.querySelector('#datetime-picker'),\n  button: document.querySelector('[data-start]'),\n};\nrefs.button.setAttribute('disabled', ' ');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    if (isFutureDate(selectedDates[0])) {\n      userSelectedDate = selectedDates[0];\n      refs.button.removeAttribute('disabled');\n    } else {\n      refs.button.setAttribute('disabled', ' ');\n      iziToast.error({\n        title: 'Error',\n        position: 'topRight',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\nflatpickr(refs.input, options);\n\nfunction isFutureDate(userSelectedDate) {\n  return userSelectedDate - Date.now() < 0 ? false : true;\n}\n\nfunction isTimerZero(deltaTime) {\n  for (const value of Object.values(deltaTime)) {\n    if (Number(value) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = days;\n  document.querySelector('[data-hours]').textContent = hours;\n  document.querySelector('[data-minutes]').textContent = minutes;\n  document.querySelector('[data-seconds]').textContent = seconds;\n}\n\nclass Countdown {\n  constructor({ onTick }) {\n    idInterval: null;\n    this.onTick = onTick;\n    this.init();\n  }\n\n  init() {\n    this.onTick(deltaTime);\n  }\n\n  // Метод start() не враховує ситуацію, коли різниця у часі стає негативною після початкової перевірки обраного часу. Умовна перевірка повинна також відбуватися в циклі зворотного виклику інтервалу.\n  // Не згоден! Другий рядок в методі не дає змогу запустить таймер, коли час стає негативним після початкової перевірки обраного часу. Для чого додаткова умовна перевірка в циклі зворотного виклику інтервалу, якщо така ситуація може виникнути один раз при старті?\n  start() {\n    refs.button.setAttribute('disabled', ' ');\n    if (isFutureDate(userSelectedDate)) {\n      refs.input.setAttribute('disabled', ' ');\n      this.idInterval = setInterval(() => {\n        deltaTime = this.convertMs(userSelectedDate - Date.now());\n        this.onTick(deltaTime);\n        if (isTimerZero(deltaTime)) {\n          return this.stop();\n        }\n      }, 1000);\n    }\n  }\n  stop() {\n    clearInterval(this.idInterval);\n    this.idInterval = null;\n    refs.input.removeAttribute('disabled', ' ');\n  }\n\n  // Helpers\n  convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = this.addLeadingZero(Math.floor(ms / day));\n    // Remaining hours\n    const hours = this.addLeadingZero(Math.floor((ms % day) / hour));\n    // Remaining minutes\n    const minutes = this.addLeadingZero(\n      Math.floor(((ms % day) % hour) / minute)\n    );\n    // Remaining seconds\n    const seconds = this.addLeadingZero(\n      Math.floor((((ms % day) % hour) % minute) / second)\n    );\n\n    return { days, hours, minutes, seconds };\n  }\n  addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n  }\n}\n\nconst timerInstance = new Countdown({ onTick: updateTimerFace });\nrefs.button.addEventListener('click', timerInstance.start.bind(timerInstance));\n"],"names":["userSelectedDate","deltaTime","refs","options","selectedDates","isFutureDate","iziToast","flatpickr","isTimerZero","value","updateTimerFace","days","hours","minutes","seconds","Countdown","onTick","ms","timerInstance"],"mappings":"+IAKA,IAAIA,EAAmB,KAAK,MACxBC,EAAY,CAAE,KAAM,KAAM,MAAO,KAAM,QAAS,KAAM,QAAS,MAEnE,MAAMC,EAAO,CACX,MAAO,SAAS,cAAc,kBAAkB,EAChD,OAAQ,SAAS,cAAc,cAAc,CAC/C,EACAA,EAAK,OAAO,aAAa,WAAY,GAAG,EAExC,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACjBC,EAAaD,EAAc,CAAC,CAAC,GAC/BJ,EAAmBI,EAAc,CAAC,EAClCF,EAAK,OAAO,gBAAgB,UAAU,IAEtCA,EAAK,OAAO,aAAa,WAAY,GAAG,EACxCI,EAAS,MAAM,CACb,MAAO,QACP,SAAU,WACV,QAAS,oCACjB,CAAO,EAEJ,CACH,EACAC,EAAUL,EAAK,MAAOC,CAAO,EAE7B,SAASE,EAAaL,EAAkB,CACtC,MAAO,EAAAA,EAAmB,KAAK,IAAK,EAAG,EACzC,CAEA,SAASQ,EAAYP,EAAW,CAC9B,UAAWQ,KAAS,OAAO,OAAOR,CAAS,EACzC,GAAI,OAAOQ,CAAK,IAAM,EACpB,MAAO,GAGX,MAAO,EACT,CAEA,SAASC,EAAgB,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1D,SAAS,cAAc,aAAa,EAAE,YAAcH,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcC,EACrD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,EACvD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,CACzD,CAEA,MAAMC,CAAU,CACd,YAAY,CAAE,OAAAC,GAAU,CAEtB,KAAK,OAASA,EACd,KAAK,KAAI,CACV,CAED,MAAO,CACL,KAAK,OAAOf,CAAS,CACtB,CAID,OAAQ,CACNC,EAAK,OAAO,aAAa,WAAY,GAAG,EACpCG,EAAaL,CAAgB,IAC/BE,EAAK,MAAM,aAAa,WAAY,GAAG,EACvC,KAAK,WAAa,YAAY,IAAM,CAGlC,GAFAD,EAAY,KAAK,UAAUD,EAAmB,KAAK,IAAG,CAAE,EACxD,KAAK,OAAOC,CAAS,EACjBO,EAAYP,CAAS,EACvB,OAAO,KAAK,MAEf,EAAE,GAAI,EAEV,CACD,MAAO,CACL,cAAc,KAAK,UAAU,EAC7B,KAAK,WAAa,KAClBC,EAAK,MAAM,gBAAgB,WAAY,GAAG,CAC3C,CAGD,UAAUe,EAAI,CAQZ,MAAMN,EAAO,KAAK,eAAe,KAAK,MAAMM,EAAK,KAAG,CAAC,EAE/CL,EAAQ,KAAK,eAAe,KAAK,MAAOK,EAAK,MAAO,IAAI,CAAC,EAEzDJ,EAAU,KAAK,eACnB,KAAK,MAAQI,EAAK,MAAO,KAAQ,GAAM,CAC7C,EAEUH,EAAU,KAAK,eACnB,KAAK,MAASG,EAAK,MAAO,KAAQ,IAAU,GAAM,CACxD,EAEI,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,CACD,eAAeL,EAAO,CACpB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACrC,CACH,CAEA,MAAMS,EAAgB,IAAIH,EAAU,CAAE,OAAQL,CAAiB,CAAA,EAC/DR,EAAK,OAAO,iBAAiB,QAASgB,EAAc,MAAM,KAAKA,CAAa,CAAC"}